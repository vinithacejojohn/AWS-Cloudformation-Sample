{
  "Parameters" : {
	
    
    "VpcId" : {
      "Type" : "AWS::EC2::VPC::Id",
      "Description" : "VpcId of your existing Virtual Private Cloud (VPC)",
      "ConstraintDescription" : "must be the VPC Id of an existing Virtual Private Cloud."
    },

    "MySubnets" : {
      "Type" : "List<AWS::EC2::Subnet::Id>",
      "Description" : "The list of SubnetIds in your Virtual Private Cloud (VPC)",
      "ConstraintDescription" : "must be a list of an existing subnets in the selected Virtual Private Cloud."
    },    
   
        
     "MySecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup::Id",
      "Description" : "The list of Security group Ids in your Virtual Private Cloud (VPC)",
      "ConstraintDescription" : "must be a list of an existing security group in the selected Virtual Private Cloud."
    },    
	 
    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type" : "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },

     "MyInstanceCount" : {
      "Description" : "Number of EC2 instances to launch",
      "Type" : "Number",
      "Default" : "1"
    },
   
   "MyInstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "t2.small",
      "AllowedValues" : [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"]
,
      "ConstraintDescription" : "must be a valid EC2 instance type."
 
   }

},

  "Resources" : {
     "MyGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
       	"HealthCheckGracePeriod" : 400,
        "VPCZoneIdentifier" : { "Ref" : "MySubnets" },
        "LaunchConfigurationName" : { "Ref" : "MyLaunchConfig"  },
        "MinSize" : "1",
        "MaxSize" : "2",
        "DesiredCapacity" : { "Ref" : "MyInstanceCount" },
	"LoadBalancerNames": [ { "Ref": "MyElasticLoadBalancer" } ] 
       }
      },

    "MyScaleUpPolicy" : {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "Properties" : {
        "AdjustmentType" : "ChangeInCapacity",
        "AutoScalingGroupName" : { "Ref" : "HubFrontGroup" },
        "Cooldown" : "60",
        "ScalingAdjustment" : "1"
      }
    },
    "MyScaleDownPolicy" : {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "Properties" : {
        "AdjustmentType" : "ChangeInCapacity",
        "AutoScalingGroupName" : { "Ref" : "HubFrontGroup" },
        "Cooldown" : "60",
        "ScalingAdjustment" : "-1"
      }
    },

     
    "MyCPUAlarmHigh": {
     "Type": "AWS::CloudWatch::Alarm",
     "Properties": {
        "AlarmDescription": "Scale-up if CPU > 80% for 900 seconds",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Statistic": "Average",
        "Period": "900",
        "EvaluationPeriods": "2",
        "Threshold": "80",
        "AlarmActions": [ { "Ref": "HubFrontScaleUpPolicy" } ],
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": { "Ref": "HubFrontGroup" }
          }
        ],
        "ComparisonOperator": "GreaterThanThreshold"
      }
    },


    "MyCPUAlarmLow": {
     "Type": "AWS::CloudWatch::Alarm",
     "Properties": {
        "AlarmDescription": "Scale-down if CPU < 40% for 300 seconds",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Statistic": "Average",
        "Period": "300",
        "EvaluationPeriods": "2",
        "Threshold": "40",
        "AlarmActions": [ { "Ref": "HubFrontScaleDownPolicy" } ],
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": { "Ref": "HubFrontGroup" }
          }
        ],
        "ComparisonOperator": "LessThanThreshold"
      }
    },



        
   "MyLaunchConfig" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Properties" : {
      "KeyName" : { "Ref" : "KeyName" },
      "ImageId" : "ami-6529c708",
      "SecurityGroups" : [ { "Ref" : "HubFrontSecurityGroup" } ],
      "InstanceType" : { "Ref" : "HubFrontInstanceType" },
      "IamInstanceProfile" : "InstanceSelfInfoRole",
       "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n",
              [
         ############# You can put your userdata here###################
	]
     ]
   }
}     
       }
    },



    "MyElasticLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "CrossZone" : "true",
	"Subnets" : { "Ref" : "ELBSubnets" },
        "Listeners": [ {
          "LoadBalancerPort": "443",
          "InstancePort": "8443",
          "Protocol": "TCP"
        } ],
        "HealthCheck": {
          "Target": "TCP:8443",
          "HealthyThreshold": "4",
          "UnhealthyThreshold": "2",
          "Interval": "20",
          "Timeout": "5"
        }
      }
    }
  }
}
